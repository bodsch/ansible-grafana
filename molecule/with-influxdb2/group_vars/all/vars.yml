---

# Datasources to configure
grafana_datasources:
  InfluxDB_v1:
    state: present
    editable: true
    type: "influxdb"
    access: "proxy"
    url: "http://database:8086"
    isDefault: true
    database: _internal
    user: influxadm
    jsonData:
      httpMode: GET
    secureJsonData:
      password: influxdbadmpass

  InfluxDB_v2_Flux:
    state: absent
    editable: true
    type: influxdb
    access: proxy
    url: http://localhost:8086
    secureJsonData:
      token: token
    jsonData:
      version: Flux
      organization: organization
      defaultBucket: bucket
      tlsSkipVerify: true

  InfluxDB_v2_InfluxQL:
    state: absent
    editable: true
    type: influxdb
    access: proxy
    url: http://localhost:8086
    # This database should be mapped to a bucket
    database: site
    jsonData:
      httpMode: GET
      httpHeaderName1: 'Authorization'
    secureJsonData:
      httpHeaderValue1: 'Token <token>'

# API keys to configure
grafana_api_keys: []
#  - name: "admin"
#    role: "Admin"
#  - name: "viewer"
#    role: "Viewer"
#  - name: "editor"
#    role: "Editor"

# The location where the keys should be stored.
grafana_api_keys_dir: "{{ lookup('env', 'HOME') }}/grafana/keys"

grafana_environment: {}

# Panels configurations
grafana_panels: {}
#  disable_sanitize_html: false
#  enable_alpha: false

# Alert notification channels to configure
grafana_alert_notifications: []
#  - name: "Email Alert"
#    type: "email"
#    uid: channel1
#    is_default: true
#    settings:
#      addresses: "example@example.com"

# Plugins from https://grafana.com/plugins
grafana_plugins: []
#  - raintank-worldping-app


# Should we use the provisioning capability when possible (provisioning require grafana >= 5.0)
grafana_provisioning.enabled: true

# Should the provisioning be kept synced. If true, previous provisioned objects will be removed if not referenced anymore.
grafana_provisioning_synced: false


...
