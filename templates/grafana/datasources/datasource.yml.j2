#jinja2: trim_blocks: True, lstrip_blocks: True
{% set data, remove_ds = grafana_datasources | absent_datasources %}
---
# config file version
apiVersion: 1

# list of datasources that should be deleted from the database
{% if remove_ds is defined and
      remove_ds | count > 0 %}
deleteDatasources:
  {{ remove_ds | to_nice_yaml | indent(2, False) }}
{% endif %}

{% if grafana_datasources is defined %}
datasources:
  {% for datasource, values in grafana_datasources.items() %}
    {% set _ = values.pop("state") %}
    {% if values.type in ["influxdb", "prometheus", "graphite"] %}
  - name: {{ datasource }}
    {{ values | to_nice_yaml | indent(4, False) }}
    {% endif %}
  {% endfor %}
{% endif %}
{#
# # list of datasources to insert/update depending
# # on what's available in the database
#datasources:
#   # <string, required> name of the datasource. Required
# - name: Graphite
#   # <string, required> datasource type. Required
#   type: graphite
#   # <string, required> access mode. direct or proxy. Required
#   access: proxy
#   # <int> org id. will default to orgId 1 if not specified
#   orgId: 1
#   # <string> url
#   url: http://localhost:8080
#   # <string> database user, if used
#   user:
#   # <string> database name, if used
#   database:
#   # <bool> enable/disable basic auth
#   basicAuth:
#   # <string> basic auth username
#   basicAuthUser:
#   # <bool> enable/disable with credentials headers
#   withCredentials:
#   # <bool> mark as default datasource. Max one per org
#   isDefault:
#   # <map> fields that will be converted to json and stored in json_data
#   jsonData:
#      graphiteVersion: "1.1"
#      tlsAuth: true
#      tlsAuthWithCACert: true
#      httpHeaderName1: "Authorization"
#   # <string> json object of data that will be encrypted.
#   secureJsonData:
#     tlsCACert: "..."
#     tlsClientCert: "..."
#     tlsClientKey: "..."
#     # <openshift\kubernetes token example>
#     httpHeaderValue1: "Bearer xf5yhfkpsnmgo"
#   version: 1
#   # <bool> allow users to edit datasources from the UI.
#   editable: false
#}
...
