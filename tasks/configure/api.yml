---

# TODO
- name: ensure grafana key directory exists
  delegate_to: localhost
  become: false
  run_once: true
  file:
    path: "{{ grafana_api.store_directory }}/{{ inventory_hostname }}"
    state: directory
    mode: 0750

- name: check api key list
  uri:
    url: "http://127.0.0.1:3000/api/auth/keys"
    user: "{{ grafana_config_security.admin_user }}"
    password: "{{ grafana_config_security.admin_password }}"
    force_basic_auth: true
    return_content: true
  no_log: false
  register: existing_api_keys

- name: d
  debug:
    msg:
      - "{{ grafana_api['keys'] }}"
      - "{{ existing_api_keys.json }}"

- name: d
  debug:
    msg:
      # - "{{ ((existing_api_keys.json | selectattr('name', 'equalto', item.name)) | list) | length == 0 }}"
      - "{{ grafana_api['keys'] | non_existing_api(existing_api_keys.json) }}"

- name: check api key list
  grafana_api_keys:
    ##  grafana_server: localhost
    ##  grafana_port: 3000
    ##  grafana_scheme: http
    grafana_url: "http://127.0.0.1:3000"
    grafana_admin:
      user: "{{ grafana_config_security.admin_user }}"
      password: "{{ grafana_config_security.admin_password }}"
  no_log: false
  register: existing_api_keys

# - name: create grafana api keys
#   uri:
#     url: "http://127.0.0.1:3000/api/auth/keys"
#     user: "{{ grafana_config_security.admin_user }}"
#     password: "{{ grafana_config_security.admin_password }}"
#     force_basic_auth: true
#     method: POST
#     body_format: json
#     body: "{{ item | to_json }}"
#     # status_code:
#     #   - 200
#     #   - 409  # already created
#   loop: "{{ grafana_api['keys'] | non_existing_api(existing_api_keys.json) }}"
#   loop_control:
#     label: "{{ item.name }}"
#   # no_log: true
#   #when:
#   #  - ((existing_api_keys['json'] | selectattr("name", "equalto", item['name'])) | list) | length == 0
#   register: new_api_keys
#
# - name: d
#   debug:
#     msg: "{{ new_api_keys.results }}"
#
# - name: create api keys file to allow the keys to be seen and used by other automation
#   delegate_to: localhost
#   become: false
#   copy:
#     dest: "{{ grafana_api_keys_dir }}/{{ inventory_hostname }}/{{ item['item']['name'] }}.key"
#     content: "{{ item['json']['key'] }}"
#     backup: false
#   when: item['json'] is defined
#   with_items: "{{ new_api_keys['results'] }}"

...
