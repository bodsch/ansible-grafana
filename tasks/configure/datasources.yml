---

# - name: D
#   debug:
#     msg: "{{ item.key }}"
#   loop: "{{ grafana_datasources | dict2items }}"

- name: ensure datasources are present
  grafana_datasource:
    state: present
    grafana_url: http://127.0.0.1:3000
    grafana_user: "{{ grafana_config_security.admin_user }}"
    grafana_password: "{{ grafana_config_security.admin_password }}"
    grafana_api_key: "{{ grafana_config_security.api_key | default(omit) }}"
    # grafana_security: "{{ item.value.user | default(omit) }}"
    #url: "{{ item.value.url | default('http://127.0.0.1') }}"
    #url_password: "{{ item.value.url_password | default(omit) }}"
    #url_username: "{{ item.value.url_username | default(omit) }}"

    access: "{{ item.value.access | default(omit) }}"
    # additional_json_data: {}
    # additional_secure_json_data: {}
    # aws_access_key: "{{ item.value.aws_access_key | default(omit) }}"
    # aws_assume_role_arn: ""
    # aws_auth_type: "{{ item.value.aws_auth_type | default(omit) }}"
    # aws_credentials_profile: "{{ item.value.aws_credentials_profile | default(omit) }}"
    # aws_custom_metrics_namespaces: "{{ item.value.aws_custom_metrics_namespaces | default(omit) }}"
    # aws_default_region: "{{ item.value.aws_default_region | default(omit) }}"
    # aws_secret_key: "{{ item.value.aws_secret_key | default(omit) }}"
    # azure_client: ""
    # azure_cloud: ""
    # azure_secret: ""
    # azure_tenant: ""
    basic_auth_password: "{{ item.value.basicAuthPassword | default(omit) }}"
    basic_auth_user: "{{ item.value.basicAuthUser | default(omit) }}"
    # client_cert: ""
    # client_key: ""
    database: "{{ item.value.database | default(omit) }}"
    ds_type: "{{ item.value.type }}"
    ds_url: "{{ item.value.url }}"
    # enforce_secure_data: ""
    # es_version: ""
    interval: ""
    is_default: "{{ item.value.isDefault | default(omit) }}"
    # max_concurrent_shard_requests: ""
    name: "{{ item.key }}"
    org_id: "{{ item.value.org_id | default('1') | int }}"
    password: "{{ item.value.password | default(omit) }}"
    # sslmode: ""
    # time_field: ""
    # time_interval: ""
    # tls_ca_cert: ""
    # tls_client_cert: ""
    # tls_client_key: ""
    # tls_skip_verify: ""
    # trends: ""
    # tsdb_resolution: ""
    # tsdb_version: ""
    use_proxy: "{{ item.value.use_proxy | default('true') | bool }}"
    user: "{{ item.value.user | default(omit) }}"
    # validate_certs: ""
    # with_credentials: ""
    # zabbix_password: ""
    # zabbix_user: ""
  loop: "{{ grafana_datasources | dict2items }}"
  loop_control:
    label: "{{ item.key }}, type {{ item.value.type }}"
  when:
    - not grafana_provisioning.enabled

# - name: create or update datasources file (provisioning)
#   become: true
#   template:
#     src: grafana/datasources/datasource.yml.j2
#     dest: "/etc/grafana/provisioning/datasources/ansible.yaml"
#     backup: false
#     owner: root
#     group: grafana
#     mode: 0640
#   notify:
#     - restart grafana
# #   when:
# #     - grafana_provisioning.enabled

...
